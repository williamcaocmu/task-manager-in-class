// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  steps Step[]
}

model Step {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  finished Boolean @default(false)
  order    Int     @default(1)
  taskId   Int
  task     Task    @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String @unique
  password String

  articles Article[]
  comments Comment[]
}

model Tag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  articles Article[]
}

model Article {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  slug        String @unique
  title       String
  description String
  body        String

  tag   Tag? @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId Int?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  comments Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content String @default("")

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int
}
